import{_ as e,k as a,j as o,m as t}from"./chunks/framework.DmHN1gsO.js";const u=JSON.parse('{"title":"@koishijs/plugin-proxy-agent","description":"","frontmatter":{},"headers":[],"relativePath":"zh-CN/plugins/develop/proxy-agent.md","filePath":"zh-CN/plugins/develop/proxy-agent.md"}'),n={name:"zh-CN/plugins/develop/proxy-agent.md"},i=t('<h1 id="koishijs-plugin-proxy-agent" tabindex="-1">@koishijs/plugin-proxy-agent <a class="header-anchor" href="#koishijs-plugin-proxy-agent" aria-label="Permalink to &quot;@koishijs/plugin-proxy-agent&quot;">​</a></h1><p>@koishijs/plugin-proxy-agent 为 <a href="./http.html"><code>http</code></a> 服务提供了额外的网络代理能力，支持 HTTP(S), SOCKS 系列协议。</p><h2 id="配置项" tabindex="-1">配置项 <a class="header-anchor" href="#配置项" aria-label="Permalink to &quot;配置项&quot;">​</a></h2><h3 id="config-proxyagent" tabindex="-1">config.proxyAgent <a class="header-anchor" href="#config-proxyagent" aria-label="Permalink to &quot;config.proxyAgent&quot;">​</a></h3><ul><li>类型: <code>string</code></li></ul><p>请求时默认使用的网络代理。</p>',6),r=[i];function p(s,l,h,c,d,g){return o(),a("div",null,r)}const x=e(n,[["render",p]]);export{u as __pageData,x as default};
